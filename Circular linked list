#include<stdio.h>
#include<stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

struct Node *addToEmpty(int data)
{
    struct Node *temp = malloc(sizeof(struct Node));
    temp->data = data;
    temp->next = temp;
    return temp;
}
struct Node *addBeg(struct Node *tail, int data)
{
    struct Node *new = malloc(sizeof(struct Node));
    new->data = data;
    new->next = tail->next;
    tail->next = new;
    return tail;
}

struct Node *addEnd(struct Node *tail, int data)
{
    struct Node *new = malloc(sizeof(struct Node));
    new->data = data;
    new->next = NULL;

    new->next = tail->next;
    tail->next = new;
    tail = tail->next;
    return tail;
}
struct Node *createList(struct Node *tail)
{
    int i,n,data;
    printf("Enter the number of nodes of the list: ");
    scanf("%d",&n);
    if(n==0)
        return tail;
    printf("Enter the element 1: ");
    scanf("%d",&data);
    tail = addToEmpty(data);
    for(i=1;i<n;i++)
    {
        printf("Enter the element %d: ",i+1);
        scanf("%d",&data);
        tail = addEnd(tail,data);
    }
    return tail;
}
struct Node *addBetween(struct Node *tail, int data, int pos)
{
    struct Node *p = tail->next;
    struct Node *new = malloc(sizeof(struct Node));
    new->data = data;
    new->next = NULL;
    while(pos>1)
    {
        p = p->next;
        pos--;
    }
    new->next = p->next;
    p->next = new;
    if(p == tail)
    {
        tail = tail->next;
    }
    return tail;

}
struct Node *delBeg(struct Node *tail)
{
    struct Node *temp = tail->next;
    tail->next = temp->next;
    free(temp);
}
struct Node *delBetween(struct Node *tail, int pos)
{
    if(tail == NULL)
        return tail;
    struct Node *temp = tail->next;
    if(tail->next == tail){
        free(tail);
        tail = NULL;
        return tail;
    }
    while(pos>2){
        temp = temp->next;
        pos--;
    }
    struct Node *temp2 = temp->next;
    temp->next = temp2->next;
    if(temp2 == tail)
        tail = temp;
    free(temp2);
    temp2 = NULL;
    return tail;
}
struct Node *delLast(struct Node *tail)
{
    if(tail == NULL)
        return tail;
    struct Node *temp = tail->next;
    if(tail->next == tail){
        free(tail);
        tail = NULL;
        return tail;
    }
    while(temp->next != tail)
    {
        temp = temp->next;
    }
    temp->next = tail->next;
    free(tail);
    tail = temp;
    return tail;
}
void print(struct Node *tail)
{
    if(tail == NULL)
        printf("No node in the list");
    else{
    struct Node *p = tail->next;
    do
    {
        printf("%d\t",p->data);
        p=p->next;
    }while(p!=tail->next);
    }
}
int main()
{
    struct Node *tail = NULL;
    tail = createList(tail);
    printf("BEFORE DELITION\n");
    print(tail);
    tail = delLast(tail);
    printf("\n");
    printf("AFTER DELITION\n");
    print(tail);
    return 0;
}
